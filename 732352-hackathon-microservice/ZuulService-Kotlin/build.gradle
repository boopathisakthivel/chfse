buildscript {
    ext.kotlin_version = '1.3.10' // Required for Kotlin integration
    ext.spring_boot_version = '2.1.0.RELEASE'
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version" // Required for Kotlin integration
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version" // See https://kotlinlang.org/docs/reference/compiler-plugins.html#spring-support
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
    }
}

apply plugin: 'kotlin' // Required for Kotlin integration
apply plugin: "kotlin-spring" // https://kotlinlang.org/docs/reference/compiler-plugins.html#spring-support
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

repositories {
    mavenLocal()
    maven {
        url = 'https://repo.spring.io/milestone'
    }

    maven {
        url = 'http://repo.maven.apache.org/maven2'
    }
	jcenter()
}



dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version" // Required for Kotlin integration
    compile 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:2.1.0.RELEASE'
    compile 'org.springframework.cloud:spring-cloud-starter-netflix-zuul:2.1.0.RELEASE'
    testCompile 'org.springframework.boot:spring-boot-starter-test:2.1.5.RELEASE'
}

configurations {
    provided.all*.exclude group: 'javax.servlet'
	provided.all*.exclude group: 'com.google.code.gson'
}

group = 'com.mentorondemand.zuul'
version = '0.0.1-SNAPSHOT'
description = 'ZuulService'
sourceCompatibility = '1.8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
